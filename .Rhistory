library()
demo(lm.glm)
x <- list(a = 1:5, b = rnorm(10))
lapply(x,mean)
x <- list(a = 1:5, b = rnorm(10))
lapply(x,mean)
x <- 1:4
lapply(x, runif)
x <- c(rnorm(10), runif(10), rnorm(10,1))
x
f <- gl(3,10)
f
tapply(x,f,mean)
str(gl)
str(colMeans)
s <- split(airquality, airquality$Month)
s
head(s)
lapply(s, function(x) colMeans(x,[,c("Ozone", "Solar.R", "Wind")]))
lapply(s, colMeans(x,[,c("Ozone", "Solar.R", "Wind")]))
lapply(s, function(x) colMeans(x,[,c("Ozone", "Solar.R", "Wind")]))
s <- split(airquality, airquality$Month)
head(s)
lapply(s, function(x) colMeans(x,[,c("Ozone", "Solar.R", "Wind")]))
lapply(s, function(x) colMeans([,c("Ozone", "Solar.R", "Wind")]))
args(lapply)
str(lapply)
s <- split(airquality, airquality$Month)
str(s)
lapply(s, function(x) colMeans(x[,c("Ozone", "Solar.R", "Wind")]))
lapply(s, function(x) colMeans(x[,c("Ozone", "Solar.R", "Wind")], na.rm=TRUE))
x <- rnorm(10)
f1 <- gl(2,5)
f2 <- gl(5,2)
f1
f2
interaction(f1,f2)
arg(interaction)
args(interaction)
str(interaction)
p <- interaction(f1,f2)
p
x
str(split(x, list(f1,f2)))
noise <- function(n, mean, sd){}
noise <- function(n, mean, sd){}
noise <- function(n, mean, sd){rnorm(n,mean,sd)}
mapply(noise(1:5, 1:5, 2))
mapply(noise,1:5, 1:5, 2)
mapply(noise,1:5, 1:5, 2)
mapply(noise,1:5, 1:5, 2)
x <- matrix(rnorm(200), 20,10)
x
head(x)
apply(x, 2, mean)
apply(x, 1, sum)
apply(x, 1, quantile, probs(0.25, 0.75))
apply(x, 1, quantile, probs = c(0.25, 0.75))
apply(x, 2, quantile, probs = c(0.25, 0.75))
a <- array(rnorm(2*2*10), c(2,2,10))
a
head(a)
tail(a)
str(a)
apply(a, c(1,2), mean)
apply(a, 3, mean)
apply(a, c(1,3), mean)
apply(a, c(1:3), mean)
apply(a, c(1,2), mean)
rowMean(a, dims=2)
rowMeans(a, dims=2)
apply(a, 2, mean)
apply(a, c(2,1), mean)
colMeans(a, dims=2)
x <- as.date("2014-10-17")
x <- as.Date("2014-10-17")
x
class(x)
unclass(x)
d <- as.Date("1961-11-04")
d
unclass(d)
x <- sys.time()
x <- Sys.time()
x
p <- as,Posixlt(x)
p <- as.Posixlt(x)
p <- as.POSIXlt(x)
p
unclass(p)
names(unclass(p))
unclass(x)
?strptime
datestr <- c("January 10,2012 10:40", "December 9, 2011 9:10")
x <- strptime(datestr, "%B %d %Y &H:%M")
x
datestr
x <- strptime(datestr, "%B %d, %Y &H:%M")
x
class(x)
datestr <- c("January 10,2012 10:40:40 CDT", "December 9, 2011 9:10:04 CDT")
datestr
x <- strptime(datestr, "%B %d, %Y &H:%M")
x
class(x)
datestr <- c("January 10,2012 10:40", "December 9, 2011 9:10")
x <- strptime(datestr, "%B %d, %Y %H:%M")
x
class(x)
unclass(x)
cube <- function(x,n){}
cube <- function(x,n){}
cub <- function(x,n){}
cube <- functions(x,n){ x^3}
cube <- function(x,n){ x^3}
cube(3)
x <- 1:10
x
if(x > 5){}
f <- function(x){ g< function(y){ y+ z} z <-4; x + g(x)}
f <- function(x){
g <- function(y){
y + z
}
z <- 4
x + g(x)
}
str(f)
f(3)
x <- 5
y <- if(x < 3){}
y <- if(x < 3){NA }else{ 10}
y
make.power <- function(n){ pow <- function(x){ x^n} pow}
make.power <- function(n){ pow <- function(x){ x^n} pow }
make.power <- function(n){ pow <- function(x){ x^n;} pow; }
library(swirl)
swirl()
c(0.5,55,-10,6)
num_vect <- c(0.5, 55, -10, 6)
tf <- numvect < 1
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <- "kiba"
my_char <- c(my_char, myname)
my_char <- c(my_char, my_name)
my_name
paste(my_char, collapse = " ")
my_name <- my_char
paste(my_name, collapse = " ")
paste("Hello", "world", sep = " ")
paste("Hello", "world!", sep = " ")
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
q()
library(lattice)
set.seed(10)
x <- rnorm(100)
f <- rep(0:1, each = 50)
y <- x + f - f * x + rnorm(100, sd = 0..5)
y <- x + f - f * x + rnorm(100, sd = 0.5)
f < factor(f, labels = c("Group1", "Group2"))
f <- factor(f, labels = c("Group1", "Group2"))
xyplot(y ~ x | f, layout = c(2,1))
xyplot(y ~ x | f, panel = function(x,y,...){}
panel.xyplot(x,y,...)
xyplot(y ~ x | f, panel = function(x,y,...){
panel.xyplot(x,y,...); panel.abline(h= median(y), lty = 2)})
panel.xyplot(x,y,...); panel.lmline(x,y, col = 2)})
xyplot(y ~ x | f, panel = function(x,y,...){
panel.xyplot(x,y,...); panel.lmline(x,y, col = 2)})
q()
set.seed(1234)
par(mar = c(0,0,0,0))
x <- rnorm(12, mean = rep(1:3, each = 4), sd = 0.2)
y <- rnorm(12, mean = rep(c(1,2,1), each = 4), sd = 0.2)
x
y
plot(x,y, col = "blue", pch = 19, cex =2)
test(x+0.05, y+0.05, labels = as.character(1:12))
text(x+0.05, y+0.05, labels = as.character(1:12))
df <- data.frame(x=x, y=y)
df
dist(df)
dist(xy) <- dist(df)
distxy <- dist(df)
distxy
hcl <- hclust(distxy)
plot(hcl)
distxy
df
kmeansObj <- kmeans(df, centers = 3)
plot(x,y, col = "blue", pch = 19, cex =2)
text(x+0.05, y+0.05, labels = as.character(1:12))
par(mar = rep(0.2, 4))
plot(x,y, col = kmeansObj$cluster, pch = 19, cex = 2)
points(kmeansObj$centers, col = 1:3, pch = 3 , cex = 3, lwd = 3)
kmeansObj$centers
set.seed(1234)
dataMatrix <- as.matrix(df)[sample(1:12),]
kmeansObj2 <- kmeans(dataMatrix, centers = 3)
par(mfrow = c(1,2), mar = c(2,4,0.1,0.1))
image(t(dataMatrix)[,nrow(dataMatrix):1], yaxt = "n")
image(t(dataMatrix)[,order(kmeansObj$cluster)], yaxt = "n")
image(t(dataMatrix)[,order(kmeansObj2$cluster)], yaxt = "n")
image(t(dataMatrix)[,order(kmeansObj$cluster)], yaxt = "n")
set.seed(12345)
par(mar = rep(0.2,4))
dataMatrix <- matrix(rnorm(400), nrow = 40)
image(1:10,1:40, t(dataMatrix)[,nrow(dataMatrix):1])
heatmap(dataMatrix)
set.seed(678910)
for(i in 1:40){ coinFlip <- rbinom(1, size = 1, prob = 0.5); if(coinFlip){ dataMatrix[i,] <- dataMatrix[i,] + rep(c(0,3), each = 5);}}
image(1:10, 1:40, t(dataMatrix)[,nrow(dataMatrix):1])
heatmap(dataMatrix)
hh <- hclust(dist(dataMatrix))
hh
dataMatrixOrdered <- dataMatrix[hh$order,]
par(mfrow = c(1,3))
image(t(dataMatrixOrdered)[,nrow(dataMatrixOrdered):1])
plot(rowMeans(dataMatrixOrdered), 40:1,, xlab = "Row Mean", ylab = "Row", pch=19)
plot(colMeans(dataMatrixOrdered), xlab = "Column", ylab = "Column Mean",, pch = 19)
q()
setwd("~/repdata/RepData_PeerAssessment1")
library(knitr)
knit2html("PA1_template.Rmd")
knit2html("PA1_template.Rmd")
q()
